version: '3.7'

services:
  shop:
    container_name: shop
    build:
      context: .
      dockerfile: Dockerfile
      network: host
    command: 
      sh -c "python manage.py runserver 0.0.0.0:8000
      && python manage.py collectstatic
      && python manage.py migrate"
    restart: on-failure
    ports:
      - "8000:8000"
    networks:
      - shop
    volumes:
      - .:/django
      - static_files:/django/static
      - media_files:/django/media
    env_file:
      - .env
    depends_on:
      - db
  
  db:
    image: postgres
    networks:
      - shop
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}

  redis:
    container_name: redis
    image: redis
    networks:
      - shop
    restart: on-failure

  celery_worker:
    container_name: celery_worker
    build: . 
    networks:
      - shop
    environment:
      - PRODUCTION=1
    command: celery -A core worker -l INFO
    restart: on-failure
    depends_on:
      - shop
      - redis
    volumes:
      - .:/django
    env_file:
      - .env
  
  celery_beat:
    container_name: celery_beat
    build: .
    networks:
      - shop
    environment:
      - PRODUCTION=1
    command: celery -A core beat -l INFO
    depends_on:
      - shop
      - redis
    env_file:
      - .env
    volumes:
      - .:/django

  nginx:
    image: nginx
    networks:
      - shop
    command: nginx -g 'daemon off;'
    ports:
      - "8080:80"
    environment:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_files:/django/static
      - media_files:/django/media

networks:
  shop:

volumes:
  static_files:
  media_files:
    